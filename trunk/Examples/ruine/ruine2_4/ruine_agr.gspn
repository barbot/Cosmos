
const double p = 0.300000;
const double q = 0.700000;

NbPlaces = 4;
NbTransitions = 4;

PlacesList = { Place1, Place2, Place3, Place4 } ;

TransitionsList = { Avance2, Recule1 , Avance3, Recule2  } ;

Marking = { (Place1,0); (Place2,2); (Place3,0); (Place4,0);  } ;

Transitions = {(Avance2,EXPONENTIAL(p),1,1,SINGLE);
 (Recule1,EXPONENTIAL(q),1,1,SINGLE);
 (Avance3,EXPONENTIAL(p),1,1,SINGLE);
 (Recule2,EXPONENTIAL(q),1,1,SINGLE);
    } ;

InArcs = { (Place2, Avance2,1);
 (Place2, Recule1,1);
 (Place3, Avance3,1);
 (Place3, Recule2,1);
  } ;

OutArcs = { (Avance2, Place3,1);
 (Avance3, Place4,1);
 (Recule2, Place2,1);
 (Recule3, Place3,1);
  } ;